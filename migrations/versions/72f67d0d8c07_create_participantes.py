"""create participantes

Revision ID: 72f67d0d8c07
Revises: 62a35f5c16bb
Create Date: 2025-08-28 23:37:12.360876

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '72f67d0d8c07'
down_revision = '62a35f5c16bb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('participantes',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('nombre', sa.String(length=120), nullable=False),
                    sa.Column('email', sa.String(length=120), nullable=False),
                    sa.Column('telefono', sa.String(length=30), nullable=True),
                    sa.Column('creado_en', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usuarios',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        "nextval('usuarios_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('nombre', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.Column('correo', sa.VARCHAR(length=120),
                              autoincrement=False, nullable=False),
                    sa.Column('contrase√±a', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('rol_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(
                        ['rol_id'], ['roles.id'], name='usuarios_rol_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='usuarios_pkey'),
                    sa.UniqueConstraint('correo', name='usuarios_correo_key', postgresql_include=[
                    ], postgresql_nulls_not_distinct=False),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('roles',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        "nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('nombre', sa.VARCHAR(length=50),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
                    sa.UniqueConstraint('nombre', name='roles_nombre_key', postgresql_include=[
                    ], postgresql_nulls_not_distinct=False),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('eventos',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('titulo', sa.VARCHAR(length=150),
                              autoincrement=False, nullable=False),
                    sa.Column('descripcion', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('fecha', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=False),
                    sa.Column('cupo_maximo', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('usuario_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(
                        ['usuario_id'], ['usuarios.id'], name=op.f('eventos_usuario_id_fkey')),
                    sa.PrimaryKeyConstraint('id', name=op.f('eventos_pkey'))
                    )
    op.drop_table('participantes')
    # ### end Alembic commands ###
